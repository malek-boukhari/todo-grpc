// Important: Please make modifications in the proto files located in the root directory to ensure they take effect.
// Changes made here will be overwritten on build unless propagated to the root directory.

// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file todo.proto (package todo_package, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum todo_package.TodoPriority
 */
export enum TodoPriority {
  /**
   * @generated from enum value: TODO_PRIORITY_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: TODO_PRIORITY_LOW = 1;
   */
  LOW = 1,

  /**
   * @generated from enum value: TODO_PRIORITY_MEDIUM = 2;
   */
  MEDIUM = 2,

  /**
   * @generated from enum value: TODO_PRIORITY_HIGH = 3;
   */
  HIGH = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(TodoPriority)
proto3.util.setEnumType(TodoPriority, "todo_package.TodoPriority", [
  { no: 0, name: "TODO_PRIORITY_UNKNOWN" },
  { no: 1, name: "TODO_PRIORITY_LOW" },
  { no: 2, name: "TODO_PRIORITY_MEDIUM" },
  { no: 3, name: "TODO_PRIORITY_HIGH" },
]);

/**
 * @generated from enum todo_package.TodoStatus
 */
export enum TodoStatus {
  /**
   * @generated from enum value: TODO_STATUS_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: TODO_STATUS_NEW = 1;
   */
  NEW = 1,

  /**
   * @generated from enum value: TODO_STATUS_IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: TODO_STATUS_DONE = 3;
   */
  DONE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(TodoStatus)
proto3.util.setEnumType(TodoStatus, "todo_package.TodoStatus", [
  { no: 0, name: "TODO_STATUS_UNKNOWN" },
  { no: 1, name: "TODO_STATUS_NEW" },
  { no: 2, name: "TODO_STATUS_IN_PROGRESS" },
  { no: 3, name: "TODO_STATUS_DONE" },
]);

/**
 * @generated from message todo_package.Todo
 */
export class Todo extends Message<Todo> {
  /**
   * @generated from field: string _id = 1;
   */
  Id = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string task = 3;
   */
  task = "";

  /**
   * @generated from field: string updatedBy = 4;
   */
  updatedBy = "";

  /**
   * @generated from field: todo_package.TodoStatus status = 5;
   */
  status = TodoStatus.UNKNOWN;

  /**
   * @generated from field: todo_package.TodoPriority priority = 6;
   */
  priority = TodoPriority.UNKNOWN;

  /**
   * @generated from field: string createdAt = 7;
   */
  createdAt = "";

  /**
   * @generated from field: string updatedAt = 8;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<Todo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "todo_package.Todo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "task", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "updatedBy", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "status", kind: "enum", T: proto3.getEnumType(TodoStatus) },
    { no: 6, name: "priority", kind: "enum", T: proto3.getEnumType(TodoPriority) },
    { no: 7, name: "createdAt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "updatedAt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Todo {
    return new Todo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Todo {
    return new Todo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Todo {
    return new Todo().fromJsonString(jsonString, options);
  }

  static equals(a: Todo | PlainMessage<Todo> | undefined, b: Todo | PlainMessage<Todo> | undefined): boolean {
    return proto3.util.equals(Todo, a, b);
  }
}

/**
 * @generated from message todo_package.GetTodoRequest
 */
export class GetTodoRequest extends Message<GetTodoRequest> {
  /**
   * @generated from field: string _id = 1;
   */
  Id = "";

  constructor(data?: PartialMessage<GetTodoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "todo_package.GetTodoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTodoRequest {
    return new GetTodoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTodoRequest {
    return new GetTodoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTodoRequest {
    return new GetTodoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetTodoRequest | PlainMessage<GetTodoRequest> | undefined, b: GetTodoRequest | PlainMessage<GetTodoRequest> | undefined): boolean {
    return proto3.util.equals(GetTodoRequest, a, b);
  }
}

/**
 * @generated from message todo_package.GetTodosRequest
 */
export class GetTodosRequest extends Message<GetTodosRequest> {
  /**
   * @generated from field: string taskId = 1;
   */
  taskId = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  constructor(data?: PartialMessage<GetTodosRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "todo_package.GetTodosRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "taskId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTodosRequest {
    return new GetTodosRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTodosRequest {
    return new GetTodosRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTodosRequest {
    return new GetTodosRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetTodosRequest | PlainMessage<GetTodosRequest> | undefined, b: GetTodosRequest | PlainMessage<GetTodosRequest> | undefined): boolean {
    return proto3.util.equals(GetTodosRequest, a, b);
  }
}

/**
 * @generated from message todo_package.GetTodosResponse
 */
export class GetTodosResponse extends Message<GetTodosResponse> {
  /**
   * @generated from field: repeated todo_package.Todo todos = 1;
   */
  todos: Todo[] = [];

  constructor(data?: PartialMessage<GetTodosResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "todo_package.GetTodosResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "todos", kind: "message", T: Todo, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTodosResponse {
    return new GetTodosResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTodosResponse {
    return new GetTodosResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTodosResponse {
    return new GetTodosResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetTodosResponse | PlainMessage<GetTodosResponse> | undefined, b: GetTodosResponse | PlainMessage<GetTodosResponse> | undefined): boolean {
    return proto3.util.equals(GetTodosResponse, a, b);
  }
}

/**
 * @generated from message todo_package.CreateTodoRequest
 */
export class CreateTodoRequest extends Message<CreateTodoRequest> {
  /**
   * @generated from field: string title = 1;
   */
  title = "";

  /**
   * @generated from field: string task = 2;
   */
  task = "";

  /**
   * @generated from field: string updatedBy = 3;
   */
  updatedBy = "";

  /**
   * @generated from field: todo_package.TodoStatus status = 4;
   */
  status = TodoStatus.UNKNOWN;

  /**
   * @generated from field: todo_package.TodoPriority priority = 5;
   */
  priority = TodoPriority.UNKNOWN;

  constructor(data?: PartialMessage<CreateTodoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "todo_package.CreateTodoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "task", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "updatedBy", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(TodoStatus) },
    { no: 5, name: "priority", kind: "enum", T: proto3.getEnumType(TodoPriority) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateTodoRequest {
    return new CreateTodoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateTodoRequest {
    return new CreateTodoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateTodoRequest {
    return new CreateTodoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateTodoRequest | PlainMessage<CreateTodoRequest> | undefined, b: CreateTodoRequest | PlainMessage<CreateTodoRequest> | undefined): boolean {
    return proto3.util.equals(CreateTodoRequest, a, b);
  }
}

/**
 * @generated from message todo_package.UpdateTodoRequest
 */
export class UpdateTodoRequest extends Message<UpdateTodoRequest> {
  /**
   * @generated from field: string _id = 1;
   */
  Id = "";

  /**
   * @generated from field: todo_package.Todo todo = 2;
   */
  todo?: Todo;

  constructor(data?: PartialMessage<UpdateTodoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "todo_package.UpdateTodoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "todo", kind: "message", T: Todo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateTodoRequest {
    return new UpdateTodoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateTodoRequest {
    return new UpdateTodoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateTodoRequest {
    return new UpdateTodoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateTodoRequest | PlainMessage<UpdateTodoRequest> | undefined, b: UpdateTodoRequest | PlainMessage<UpdateTodoRequest> | undefined): boolean {
    return proto3.util.equals(UpdateTodoRequest, a, b);
  }
}

/**
 * @generated from message todo_package.DeleteTodoRequest
 */
export class DeleteTodoRequest extends Message<DeleteTodoRequest> {
  /**
   * @generated from field: string _id = 1;
   */
  Id = "";

  constructor(data?: PartialMessage<DeleteTodoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "todo_package.DeleteTodoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteTodoRequest {
    return new DeleteTodoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteTodoRequest {
    return new DeleteTodoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteTodoRequest {
    return new DeleteTodoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteTodoRequest | PlainMessage<DeleteTodoRequest> | undefined, b: DeleteTodoRequest | PlainMessage<DeleteTodoRequest> | undefined): boolean {
    return proto3.util.equals(DeleteTodoRequest, a, b);
  }
}

/**
 * @generated from message todo_package.DeleteTodoResponse
 */
export class DeleteTodoResponse extends Message<DeleteTodoResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success = false;

  constructor(data?: PartialMessage<DeleteTodoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "todo_package.DeleteTodoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteTodoResponse {
    return new DeleteTodoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteTodoResponse {
    return new DeleteTodoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteTodoResponse {
    return new DeleteTodoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteTodoResponse | PlainMessage<DeleteTodoResponse> | undefined, b: DeleteTodoResponse | PlainMessage<DeleteTodoResponse> | undefined): boolean {
    return proto3.util.equals(DeleteTodoResponse, a, b);
  }
}

